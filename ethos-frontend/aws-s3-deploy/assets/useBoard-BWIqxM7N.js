import{b as v,u as w,r as a,D as x,f as y,q as T,i as $}from"./index-CxzMjhE-.js";import{d as L}from"./quest-3nETprwz.js";import{d as z}from"./post-BFgSlzkn.js";const D=e=>typeof e=="string"?e:`${e.type}-${e.questId}`,g=(e,f)=>{const{boards:m={},setSelectedBoard:q,appendToBoard:I,removeItemFromBoard:A}=v(),{user:p}=w(),s=a.useMemo(()=>e?D(e):void 0,[e]),[B,h]=a.useState(s?m[s]:void 0),[E,b]=a.useState(!1),n=(f==null?void 0:f.pageSize)??x,i=a.useCallback(async(t,r=1,u=n)=>{var l;b(!0);try{const o=typeof e=="object"?!!e.enrich:!0,c=await y(t,{enrich:o,page:r,limit:u,userId:p==null?void 0:p.id});return h(c),c}catch(o){((l=o==null?void 0:o.response)==null?void 0:l.status)===404?console.info(`[useBoard] Board ${t} not found`):console.error(`[useBoard] Failed to load board ${t}:`,o);return}finally{b(!1)}},[e,n]),S=a.useCallback(async()=>{if(s)return await i(s,1,n)},[s,i,n]),C=a.useCallback(async t=>{try{return await T({userId:t,enrich:!0})}catch(r){return console.error("[useBoard] Failed to fetch all boards:",r),[]}},[]),F=a.useCallback(async t=>{const[r,u,l,o,c]=await Promise.all([y("my-quests",{userId:t}).catch(()=>null),y("my-posts",{userId:t}).catch(()=>null),$(t).catch(()=>null),L("my-quests",t).catch(()=>[]),z("my-posts",t).catch(()=>[])]),P=r?{...r,items:o.map(d=>d.id),enrichedItems:o}:{id:"my-quests",title:"Quests",boardType:"quest",layout:"grid",items:o.map(d=>d.id),createdAt:"",userId:t,enrichedItems:o},k=u?{...u,items:c.map(d=>d.id),enrichedItems:c}:{id:"my-posts",title:"Posts",boardType:"post",layout:"grid",items:c.map(d=>d.id),createdAt:"",userId:t,enrichedItems:c};return{profile:l,quests:P,posts:k}},[]);return a.useEffect(()=>{s&&!B&&i(s,1,n)},[s,n]),a.useEffect(()=>{if(!s)return;const t=m[s];t&&t!==B&&h(t)},[m,s]),{board:B,setBoard:h,isLoading:E,loadBoard:i,refresh:S,fetchBoards:C,loadPublicBoards:F,setSelectedBoard:q,appendToBoard:I,removeItemFromBoard:A}};export{g as u};
