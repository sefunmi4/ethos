import{r as o,T as c}from"./index-CxzMjhE-.js";import{h as d,d as u}from"./post-BFgSlzkn.js";const T=()=>{const n=o.useContext(c);if(!n)throw new Error("useTimeline must be used within a TimelineProvider");const{setTimelineEvents:r}=n,i=o.useCallback(async e=>{try{await d({authorId:e.userId,type:"meta_system",content:e.content,visibility:"private",tags:["system"],collaborators:[],linkedItems:[],systemGenerated:!0,autoGeneratedReason:e.type})}catch(s){console.error("[useTimeline] Failed to add timeline event:",s)}},[]),l=o.useCallback(async(e,s)=>{try{const m=(await u(e,s)).filter(t=>t.type==="meta_system").map(t=>({userId:t.authorId,type:t.autoGeneratedReason||"system",content:t.content}));r(e,m)}catch(a){console.error("[useTimeline] Failed to load timeline for board:",a)}},[r]);return{addTimelineEvent:i,loadTimeline:l}};export{T as u};
