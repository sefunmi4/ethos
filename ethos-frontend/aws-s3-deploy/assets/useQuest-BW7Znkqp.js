import{r as s}from"./index-CxzMjhE-.js";import{d as w,b as u,e as C,a as k}from"./quest-3nETprwz.js";import{s as b,f as g,a as $}from"./useGraph-Br1XlEWj.js";function A(r){return!!r&&typeof r=="object"&&"id"in r&&"headPostId"in r&&!("type"in r||"content"in r)}const G=r=>{const[l,i]=s.useState(null),[f,h]=s.useState(null),[y,o]=s.useState(!!r);s.useEffect(()=>{if(!r)return;(async()=>{o(!0);try{const t=await k(r);i(t)}catch(t){h("Failed to load quest"),console.error("[useQuest] Failed to load quest by ID:",t)}finally{o(!1)}})()},[r]);const Q=s.useCallback(async(e,t)=>{try{return await w(e,t)}catch(c){return console.error(`[useQuest] Failed to fetch quests for board: ${e}`,c),[]}},[]),n=s.useCallback(async()=>{try{return await u()}catch(e){return console.error("[useQuest] Failed to fetch all quests:",e),[]}},[]),a=s.useCallback(async e=>{try{return await Promise.all(e.filter(A).map(c=>C(c)))}catch(t){return console.error("[useQuest] Failed to enrich quests:",t),[]}},[]),d=s.useCallback(async()=>{const e=await u();return a(e)},[n,a]),m=s.useCallback(async e=>{try{return await b(e)}catch(t){throw console.error(`[useQuest] Failed to sync git repo for quest ${e}:`,t),t}},[]),p=s.useCallback(async e=>{try{return await g(e)}catch(t){return console.error(`[useQuest] Failed to fetch git file tree for quest ${e}:`,t),[]}},[]),F=s.useCallback(async e=>{try{return await $(e)}catch(t){return console.error(`[useQuest] Failed to fetch commit history for quest ${e}:`,t),[]}},[]);return{quest:l,error:f,isLoading:y,fetchQuestsForBoard:Q,fetchAllQuests:n,enrichQuests:a,getAllEnrichedQuests:d,syncRepo:m,fetchFileTree:p,fetchCommitHistory:F}};export{G as u};
